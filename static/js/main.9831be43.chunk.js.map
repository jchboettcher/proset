{"version":3,"sources":["theme.js","client.js","config.js","containers/LevelPage/styles.js","containers/graphql.js","containers/LevelPage/components/Level.js","containers/LevelPage/components/Description.js","containers/LevelPage/components/Entry.js","containers/LevelPage/components/Leaderboard.js","containers/LevelPage/index.js","App.js","index.js"],"names":["theme","colors","primaryText","mainBackground","fonts","primary","family","weight","httpLink","HttpLink","uri","credentials","middlewareLink","ApolloLink","operation","forward","token","localStorage","getItem","setContext","headers","authorization","errorLink","onError","client","ApolloClient","cache","InMemoryCache","link","from","BackgroundDiv","styled","div","LevelDiv","LeaderboardDiv","CenterDiv","Title","h1","Paragraph","h3","p","StyledTd","td","RankTd","NameTd","TimeTd","StyledTable","table","StyledTableBody","tbody","StyledTableHead","thead","LeaderboardHeader","GET_RANKINGS","gql","ADD_USER","Level","n","w","row","dotsize","fst","rows","tot","cards","resetButton","submitButton","newButton","dropButton","buttonWidths","buttonCols","progressBar","timer","level","setEntry","history","useHistory","useQuery","variables","game","parseInt","limit","boardLimit","partialRefetch","error","onCompleted","data","loading","useMutation","refetchQueries","query","addUser","side","btwn","menusize","offsettop","h","poses","locs","numButtons","buttonTexts","timerWidth","promptCount","startOver","p5","Math","ceil","color","textSize","map","el","textWidth","Button","Timer","Progress","x","i","push","r","c","inds","sort","a","b","indexOf","rlen","y","reset","Card","toString","padStart","split","j","floor","random","temp","setVis","on","forEach","visible","dots","this","selected","angle","t","dir","colort","entert","jiggle","sin","translate","lerp","stroke","fill","rotate","scale","strokeWeight","colorMode","HSB","to","RGB","lerpColor","rect","ellipse","pop","start","Date","now","done","undefined","elapsed","getTime","pad","getMinutes","getSeconds","getMilliseconds","s","getTimeString","hrs","rst","length","textAlign","LEFT","CENTER","text","RIGHT","prev","next","noStroke","max","txt","id","upTo","leftOffset","slice","reduce","acc","width","corners","out","mouseX","mouseY","over","rectMode","triangle","sqrt","setup","canvasParentRef","createCanvas","parent","draw","background","show","height","card","update","textStyle","BOLDITALIC","time","newRecord","usersBy1","score1","console","log","initials","prompt","name","input","score2","mousePressed","select","overButton","newN","set","filter","e","ind","Array","enter","splice","end","alarm","checkSet","Description","index","bold","extraStyle","nameStyle","fontWeight","fontStyle","style","mns","scs","mls","Entry","boldEntry","Leaderboard","queryError","queryLoading","entry","LevelPage","useParams","useEffect","document","title","useState","href","App","basename","className","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9831be43.chunk.js","sourcesContent":["// Add global styles and fonts here\n\nconst theme = {\n  colors: {\n    primaryText: '#232323',\n    mainBackground: '#F2F2F2',\n  },\n  fonts: {\n    primary: {\n      family: 'Source Sans Pro, sans-serif',\n      weight: 400,\n    },\n  },\n}\n\nexport default theme\n","import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\nimport config from './config'\n\nconst httpLink = new HttpLink({\n  uri: config.graphqlUrl,\n  credentials: 'include',\n})\n\n\nconst middlewareLink = new ApolloLink((operation, forward) => {\n  const token = localStorage.getItem('token')\n  if (token) {\n    operation.setContext({\n      headers: {\n        authorization: token,\n      },\n    })\n  }\n\n  return forward(operation)\n})\n\nconst errorLink = onError(() => {\n  // Handle specific errors here\n  //   e.g. redirect to login on AuthenticationError\n})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: ApolloLink.from([\n    errorLink,\n    middlewareLink,\n    httpLink,\n  ]),\n})\n\nexport default client\n","export default {\n  graphqlUrl: 'https://games-leaderboard-backend.herokuapp.com/',\n}\n","import styled from 'styled-components'\n\nexport const BackgroundDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* margin: 100px; */\n  /* background-color: palegoldenrod; */\n`\n\nexport const LevelDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const LeaderboardDiv = styled.div`\n  padding: 0px 0px 80px 50px;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const CenterDiv = styled.div`\n  display: flex;\n  justify-content: left;\n  /* width: 100vw;\n  height: 100%; */\n  margin-left: 60px;\n  margin-right: 60px;\n  margin-top: 10px;\n`\n\nexport const Title = styled.h1`\n  font-weight: bold;\n  font-size: 40px;\n  font-family: Arial, Helvetica, sans-serif;\n  margin-bottom: 0;\n`\n\nexport const Subtitle = styled.h3`\n  font-weight: bold;\n  font-size: 18px;\n  font-family: Arial, Helvetica, sans-serif;\n  margin-top: 0;\n  margin-bottom: 0;\n`\n\nexport const Paragraph = styled.p`\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 15px;\n  /* margin-top: 10px; */\n  margin-bottom: 25px;\n`\n\nexport const StyledTd = styled.td`\n  padding: 6px;\n  border: solid;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 15px;\n  border-color: black;\n  border-width: 1.5px;\n`\n\nexport const RankTd = styled(StyledTd)`\n  width: 50px;\n`\n\nexport const NameTd = styled(StyledTd)`\n  width: 100px;\n`\n\nexport const TimeTd = styled(StyledTd)`\n  width: 200px;\n`\n\nexport const StyledTable = styled.table`\n  border-collapse: collapse;\n  /* margin: 10px; */\n`\n\nexport const StyledTableBody = styled.tbody`\n  background-color: rgb(247,247,247);\n`\n\nexport const StyledTableHead = styled.thead`\n  font-weight: bold;\n  /* font-size: 18px; */\n  background-color: rgb(210,210,210);\n`\n\nexport const LeaderboardHeader = styled.h1`\n  margin-top: 0px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 24px;\n  font-weight: bold;\n`","import gql from 'graphql-tag'\n\nexport const GET_RANKINGS = gql`\n  query usersBy1($game: String!, $level: Int!, $limit: Int!) {\n    usersBy1(game: $game, level: $level, limit: $limit) {\n      id\n      name\n      game\n      level\n      score1\n      score2\n      createdAt\n    }\n  }\n`\n\nexport const ADD_USER = gql`\n  mutation addUser($input: AddUser!) {\n    addUser(input: $input) {\n      id\n      name\n      game\n      level\n      score1\n      score2\n      createdAt\n    }\n  }\n`","import React from 'react'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport Sketch from 'react-p5'\nimport { useHistory } from 'react-router-dom'\nimport { GET_RANKINGS, ADD_USER } from '../../graphql'\nimport { boardLimit } from '../'\n\nconst Level = ({ level, setEntry }) => {\n\n  const history = useHistory()\n  const { data, error: queryError, loading: queryLoading } = useQuery(GET_RANKINGS, {\n    variables: {\n      game: \"proset\",\n      level: parseInt(level),\n      limit: boardLimit,\n    },\n    partialRefetch: true,\n    onError: error => { return },\n    onCompleted: data => { return },\n  })\n  const [addUser, { data: addData, error: addError, loading: addLoading}] = useMutation(ADD_USER, {\n    refetchQueries: [{\n      query: GET_RANKINGS,\n      variables: {\n        game: \"proset\",\n        level: parseInt(level),\n        limit: boardLimit,\n      }\n    }],\n    onError: error => { return },\n    onCompleted: data => { return },\n  })\n  \n  let n\n  const side = 120\n  const btwn = 20\n  const curve = 5\n  const offsetx = 80\n  const offsettop = 140\n  const offsetbot = 60\n  const menusize = offsettop - offsetbot\n\n  let w\n  const h = side\n  const poses = []\n  let row\n  let dotsize\n  let fst\n  let rows\n  let colors = []\n  let tot\n\n  let cards\n  let locs = []\n\n  let resetButton\n  let submitButton\n  let newButton\n  let dropButton\n  let numButtons = []\n  let buttonWidths\n  const buttonHeight = 30\n  const buttonTexts = [\"New\",\"Deselect\",\"Submit\"]\n  let buttonCols\n  let progressBar\n  let timer\n  const timerWidth = 127.6\n  let promptCount = 0\n\n  const setup = (p5, canvasParentRef) => {\n    // console.log(n)\n    p5.createCanvas(5*side+4*btwn+2*offsetx, 2*side+btwn+offsettop+offsetbot).parent(canvasParentRef)\n    startOver(p5)\n  }\n\n  const startOver = (p5) => {\n    n = parseInt(level)\n    w = (n == 5 || n == 6) ? side*5/7 : side\n    row = (n > 6) ? 3 : 2\n    dotsize = w / (2*row+1)\n    fst = Math.ceil((n+1)/2)\n    rows = [fst, n+1-fst]\n    tot = 2**n\n    buttonCols = [p5.color(20,20,240), p5.color(230,0,0), p5.color(0,210,0), p5.color(20,20,240)]\n    p5.textSize(17)\n    buttonWidths = buttonTexts.map(el => p5.textWidth(el)*1.21+34)\n    buttonWidths[3] = 11\n    submitButton = new Button(2, p5)\n    resetButton = new Button(1, p5)\n    newButton = new Button(0, p5)\n    dropButton = new Button(3, p5)\n    timer = new Timer(menusize/3, menusize/2, p5)\n    progressBar = new Progress(2*menusize/3+timerWidth+3,menusize*3/8,submitButton.x-menusize-8-timerWidth,menusize/4, p5)\n    for (let i = 4; i < 10; i++) {\n      buttonWidths[i] = buttonWidths[3]\n      numButtons.push(new Button(i, p5))\n      buttonCols.push(p5.color(20,20,240))\n    }\n    colors = [\n      p5.color(255,0,0),\n      p5.color(255,255,0),\n      p5.color(0,0,255),\n      p5.color(0,128,0),\n      p5.color(255,0,255),\n      p5.color(0,255,0),\n      p5.color(0,255,255)\n    ]\n    colors.push(p5.color(0))\n    colors.push(p5.color(255))\n    for (let i = 0; i < 9; i++) {\n      const r = i % row\n      const c = (i - r) / row\n      poses.push({r, c})\n    }\n    if (n > 6) {\n      const inds = [0,1,6,2,3,7,4,5,8]\n      poses.sort((a,b) => inds[poses.indexOf(a)]-inds[poses.indexOf(b)])\n    }\n    for (let i = n; i >= 0; i--) {\n      const r = (i < fst) ? 0 : 1\n      const c = i % fst\n      const rlen = rows[r]*(w+btwn) - btwn\n      locs.push({x: -rlen/2+c*(w+btwn), y: -h-btwn/2+r*(h+btwn)})\n    }\n    // console.log(locs)\n    reset(p5)\n  }\n\n  const deselectAll = () => {\n    cards.slice(0,n+1).forEach(card => {\n      if (!!card && card.selected) {\n        card.select()\n      }\n    })\n  }\n\n  const reset = (p5) => {\n    cards = []\n    for (let i = tot-1; i >0; i--) {\n      cards.push(new Card(i.toString(2).padStart(n,'0').split(\"\").map(el => el==\"1\"), p5))\n    }\n    for (let i = tot - 2; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1))\n      const temp = cards[j]\n      cards[j] = cards[i]\n      cards[i] = temp\n    }\n    progressBar.reset()\n    timer.reset()\n    promptCount = 0\n  }\n\n  const setVis = on => {\n    numButtons.forEach(el => el.visible = on)\n  }\n\n  const checkVis = () => {\n    if (dropButton.over()) {\n      setVis(true)\n    } else if (!dropButton.over() && !newButton.over()) {\n      setVis(false)\n    }\n  }\n\n  const checkSet = () => {\n    const set = cards.slice(0,n+1).filter(el => !!el && el.selected)\n    const dotsTot = set.reduce((acc, el) => el.dots.map((e, ind) => e+acc[ind]), Array(n).fill(0))\n    const total = dotsTot.reduce((acc, el) => acc + (el % 2), 0)\n    if (total == 0) {\n      set.forEach(card => {\n        const i = cards.indexOf(card)\n        cards[i] = cards[n+1]\n        !!cards[i] && cards[i].enter()\n        cards.splice(n+1,1)\n      })\n      progressBar.update(set.length)\n      if (progressBar.next == tot-1) {\n        timer.end()\n      }\n    } else {\n      set.forEach(card => card.alarm())\n    }\n  }\n\n  const mousePressed = (p5) => {\n    if (!!cards) {\n      for (let i = 0; i < n+1; i++) {\n        let {x,y} = locs[i]\n        x += p5.width/2\n        y += p5.height/2+(offsettop-offsetbot)/2\n        if (p5.mouseX >= x && p5.mouseX < x+w && p5.mouseY >= y && p5.mouseY < y+h) {\n          !!cards[i] && cards[i].select()\n        }\n      }\n      if (resetButton.over()) {\n        deselectAll()\n      } else if (newButton.over()) {\n        if (!dropButton.over()) {\n          setVis(false)\n          reset(p5)\n        } else {\n          const overButton = numButtons.reduce((acc, el) => el.over() ? el : acc, null)\n          if (!!overButton) {\n            setVis(false)\n            const newN = overButton.id\n            if (newN != n) {\n              history.push(`${newN}`)\n            } else {\n              reset(p5)\n            }\n          }\n        }\n      } else if (submitButton.over()) {\n        checkSet()\n      }\n    }\n  }\n\n  const draw = (p5) => {\n    p5.background(247)\n    p5.push()\n    p5.fill(210)\n    p5.rect(0.5,0.5,p5.width-1,menusize-1)\n    if (!!cards) {\n      checkVis()\n      submitButton.show()\n      resetButton.show()\n      newButton.show()\n      dropButton.show()\n      numButtons.forEach(el => el.show())\n      progressBar.show()\n      timer.show()\n      p5.translate(p5.width/2,p5.height/2+(offsettop-offsetbot)/2)\n      for (let i = 0; i < n+1; i++) {\n        // console.log(i,n,i<n+1)\n        const card = cards[i]\n        if (!!card){\n          // console.log(n,i,locs[i],locs)\n          card.show(locs[i])\n          card.update()\n        }\n        // console.log(-rlen/2+c*(w+btwn),-h-btwn/2+r*(h+btwn),frameCount)\n        // card.show(0,0)\n      }\n      if (timer.done) {\n        p5.textAlign(p5.CENTER,p5.CENTER)\n        p5.textSize(70)\n        p5.fill(0)\n        p5.textStyle(p5.BOLDITALIC)\n        p5.text(\"Good job!\",0,0)\n        if (promptCount == 5) {\n          let time = timer.getTime().getTime()\n          time = Math.floor(time/10)*10\n          let newRecord = true\n          const boardLength = data.usersBy1.length\n          if (boardLength == boardLimit) {\n            newRecord = data.usersBy1[boardLimit-1].score1 > time\n            console.log(newRecord,time,data.usersBy1)\n          } else {\n            console.log(\"nope\")\n          }\n          if (newRecord) {\n            let initials = prompt(\"You made the leaderboard! Initials?\")\n            initials = !!initials ? initials : \"anon.\"\n            // console.log(time,initials)\n            setEntry({name: initials, score1: time})\n            // console.log({name: initials, score1: time})\n            addUser({\n              variables: {\n                input: {\n                  name: initials,\n                  game: \"proset\",\n                  level: n,\n                  score1: time,\n                  score2: 0,\n                }\n              }\n            })\n          }\n        }\n        if (progressBar.t > 0.95) {\n          promptCount += 1\n        }\n      }\n    } else {\n      startOver(p5)\n    }\n    p5.pop()\n  }\n\n  class Card {\n\n    constructor(dots, p5) {\n      this.dots = dots\n      this.selected = false\n      this.angle = 0\n      this.t = 100\n      this.dir = p5.random([-1,1])\n      this.dir *= p5.random(0.9,1.8)\n      this.colort = 1\n      this.entert = 0\n      this.p5 = p5\n    }\n  \n    select() {\n      this.selected = !this.selected\n      this.jiggle()\n    }\n  \n    jiggle() {\n      this.t = 0\n      this.dir = this.p5.random([-1,1])\n      this.dir *= this.p5.random(0.9,1.8)\n    }\n  \n    alarm() {\n      this.jiggle()\n      this.colort = 0\n    }\n  \n    enter() {\n      this.entert = 1\n    }\n  \n    update() {\n      // if (this.selected) {\n      this.t += 0.3\n      this.angle = this.dir*0.1*1.4**(-this.t)*Math.sin(this.t)\n      if (this.colort < 1) {\n        this.colort += 0.025\n      }\n      if (this.entert > 0) {\n        this.entert -= 0.04\n      }\n      // }\n    }\n  \n    show({x,y}) {\n      this.p5.push()\n      this.p5.translate(x+w/2,y+h/2)\n      this.p5.translate(0,this.p5.lerp(0,h*2+btwn+offsetbot+20,this.entert))\n      this.p5.stroke(0)\n      this.p5.fill(255)\n      this.p5.rotate(this.angle)\n      if (this.selected) {\n        this.p5.scale(1.05)\n        // p5.fill(0)\n        // p5.stroke(255)\n        this.p5.strokeWeight(3)\n        this.p5.colorMode(this.p5.HSB)\n        const from = this.p5.color(5,97,100)\n        const to = this.p5.color(120,100,78)\n        this.p5.colorMode(this.p5.RGB)\n        this.p5.stroke(this.p5.lerpColor(from,to,this.colort))\n      }\n      this.p5.translate(-w/2,-h/2)\n      this.p5.rect(0,0,w,h,curve)\n      this.p5.stroke(0)\n      this.p5.strokeWeight(1)\n      for (let i = 0; i < n; i++) {\n        if (this.dots[i]) {\n          const {r, c} = poses[i]\n          this.p5.fill(colors[i])\n          this.p5.ellipse((2*r+1.5)*dotsize,(2*c+1.5)*dotsize,dotsize*1.25)\n        }\n      }\n      this.p5.pop()\n    }\n  \n  }\n\n  class Timer {\n\n    constructor(x,y,p5) {\n      this.x = x\n      this.y = y\n      this.start = Date.now()\n      this.p5 = p5\n    }\n      \n    reset() {\n      this.start = Date.now()\n      this.done = undefined\n    }\n  \n    end() {\n      this.done = new Date(Date.now() - this.start)\n    }\n  \n    getTime() {\n      return !!this.done ? this.done : new Date(Date.now() - this.start)\n    }\n\n    getTimeString() {\n      const elapsed = this.getTime()\n      return [`${Math.floor(elapsed.getTime()/3600000)}`,`${this.pad(elapsed.getMinutes())}:${this.pad(elapsed.getSeconds())}.${this.pad(Math.floor(elapsed.getMilliseconds()/10))}`]\n    }\n  \n    pad(s) {\n      return (s < 10 ? \"0\" : \"\") + s\n    }\n  \n    show() {\n      this.p5.push()\n      const rat0 = 0.55615234375\n      const rat1 = 4.17041015625\n      const [hrs, rst] = this.getTimeString()\n      this.p5.textSize(timerWidth/(rat1+hrs.length*rat0))\n      this.p5.translate(this.x+timerWidth-this.p5.textWidth(':00:00.00'),this.y)\n      this.p5.fill(0)\n      this.p5.textAlign(this.p5.LEFT,this.p5.CENTER)\n      this.p5.text(\":\"+rst,0,0)\n      this.p5.textAlign(this.p5.RIGHT,this.p5.CENTER)\n      this.p5.text(hrs,0,0)\n      this.p5.pop()\n    }\n  \n  }\n\n  class Progress {\n\n    constructor(x,y,w,h,p5) {\n      this.x = x\n      this.y = y\n      this.w = w\n      this.h = h\n      this.reset()\n      this.p5 = p5\n    }\n  \n    reset() {\n      this.t = 0\n      this.prev = 0\n      this.next = 0\n    }\n  \n    update(next) {\n      this.t = 0\n      this.prev = this.next\n      this.next += next\n    }\n  \n    show() {\n      if (this.t < 1) {\n        this.t += 0.04\n      }\n      this.p5.push()\n      this.p5.translate(this.x,this.y)\n      this.p5.fill(255)\n      this.p5.rect(0,0,this.w,this.h)\n      this.p5.fill(0,200,0)\n      this.p5.noStroke()\n      this.p5.rect(0.5,0.5,Math.max(this.p5.lerp(this.prev,this.next,this.t)/(tot-1)*this.w-1,0),this.h-1)\n      const txt = Math.floor(this.p5.lerp(this.prev,this.next,this.t))+\" / \"+(tot-1)\n      this.p5.fill(0)\n      this.p5.textSize(14)\n      this.p5.translate(this.w-(this.h-11)/2,this.h/2)\n      this.p5.textAlign(this.p5.RIGHT,this.p5.CENTER)\n      this.p5.text(txt,0,0)\n      this.p5.pop()\n    }\n  \n  }\n\n  class Button {\n\n    constructor(id,p5) {\n      this.w = buttonWidths[id]\n      if (id > 3) {\n        this.w *= 1.7\n      }\n      this.h = (id < 3) ? buttonHeight : this.w\n      this.txt = (id < 3) ? buttonTexts[id] : \"\" + id\n      const upTo = (id < 3) ? id + 1 : 1\n      const leftOffset = (id < 3) ? buttonWidths.slice(0,upTo).reduce((acc,el)=>el+acc,0) : 2+this.w\n      this.x = p5.width - ((menusize-buttonHeight)/2+5)*upTo - leftOffset\n      this.y = menusize/2 - buttonHeight/2 + ((id < 3) ? 0 : 2)\n      if (id > 3) {\n        this.x -= (1-(id % 2))*(this.w)+0.75\n        this.y += (Math.floor((id-2)/2))*(this.h)-this.h+buttonWidths[id]+1.75\n      }\n      this.id = id\n      this.visible = (id < 4)\n      this.corners = (id < 4) ? [1,1,1,1] : [id==4,id==5,id==9,id==8]\n      // this.corners = [1,1,1,1]\n      this.p5 = p5\n    }\n  \n    over() {\n      if (!this.visible) {\n        return false\n      }\n      if (this.id == 3) {\n        this.x -= 1\n        this.y -= 2\n        this.w += 3\n        this.h += 3\n      }\n      let out = this.p5.mouseX >= this.x && this.p5.mouseX < this.x+this.w && this.p5.mouseY >= this.y && this.p5.mouseY < this.y+this.h\n      if (this.id == 3) {\n        this.x += 1\n        this.y += 2\n        this.w -= 3\n        this.h -= 3\n      }\n      if (this.id == 3 || this.id == 0) {\n        out = numButtons.reduce((acc, el) => acc || el.over(), out)\n      }\n      return out\n    }\n    \n    show() {\n      if (!this.visible) {\n        return\n      }\n      this.p5.push()\n      const b = (this.id != 3) ? !this.over() : (\n        (this.over() && newButton.over()) || (!this.over() && !newButton.over()) || numButtons[0].visible\n      )\n      this.p5.fill(b ? buttonCols[this.id] : 255)\n      this.p5.stroke(this.id >= 3 ? buttonCols[this.id] : (b ? 0 : buttonCols[this.id]))\n      if (this.id != 3) {\n        this.p5.strokeWeight(this.id > 3 ? 1.5 : (b ? 1 : 1.5))\n      } else {\n        this.p5.noStroke()\n      }\n      this.p5.translate(this.x+this.w/2,this.y+this.h/2)\n      this.p5.rectMode(this.p5.CENTER)\n      this.p5.rect(0,0,this.w,this.h,...(this.corners.map(el => el*curve*((this.id < 3) ? 0.7 : 0.35))))\n      this.p5.noStroke()\n      if (this.id != 3) {\n        this.p5.textAlign(this.p5.CENTER,this.p5.CENTER)\n        this.p5.fill(this.over() ? buttonCols[this.id] : 255)\n        this.p5.textSize((this.id < 3) ? 17 : 14)\n        this.p5.text(this.txt,0,0)\n      } else {\n        const s = this.w*0.6\n        this.p5.fill(!b ? buttonCols[this.id] : 255)\n        this.p5.translate(0,-0.5)\n        this.p5.triangle(-s/2,-s/(2*Math.sqrt(3)),s/2,-s/(2*Math.sqrt(3)),0,s/Math.sqrt(3))\n      }\n      this.p5.pop()\n    }\n  }\n\n  return (\n    <Sketch setup={setup} draw={draw} mousePressed={mousePressed} />\n  )\n}\n\nexport default Level\n","import React from 'react'\nimport { RankTd, NameTd, TimeTd } from '../styles'\n\nconst Description = ({\n  index, name, score1, bold,\n}) => {\n  const pad = (s) => {\n    return (s < 10 ? \"0\" : \"\") + s\n  }\n  const getTimeString = (elapsed) => {\n    const hrs = Math.floor(elapsed/3600000)\n    elapsed = elapsed % 3600000\n    const mns = Math.floor(elapsed/60000)\n    elapsed = elapsed % 60000\n    const scs = Math.floor(elapsed/1000)\n    elapsed = elapsed % 1000\n    const mls = Math.floor(elapsed/10)\n    return `${hrs}:${pad(mns)}:${pad(scs)}.${pad(mls)}`\n  }\n  const extraStyle = {}\n  const nameStyle = {}\n  if (bold) {\n    extraStyle.fontWeight = \"bold\"\n    nameStyle.fontWeight = \"bold\"\n  }\n  if (name == \"anon.\") {\n    nameStyle.fontStyle = \"italic\"\n  }\n  return (\n    <tr>\n      <RankTd style={extraStyle}>{`${index + 1}`}</RankTd>\n      <NameTd style={nameStyle}>{`${name}`}</NameTd>\n      <TimeTd style={extraStyle}>{`${getTimeString(score1)}`}</TimeTd>\n    </tr>\n  )\n}\n\nexport default Description","import React from 'react'\n// import {\n//   StyledTd,\n// } from '../styles'\nimport Description from './Description'\n\nconst Entry = ({\n  index, name, score1, boldEntry\n}) => {\n  // console.log(index,name,score1,boldEntry)\n  const bold = boldEntry.name == name && boldEntry.score1 == score1\n  const data = {\n    index, name, score1, bold\n  }\n  return (\n    <>\n      {index\n        ? (\n            index % 2 ? (\n            // <OddEntryDiv>\n              <Description {...data} />\n            // </OddEntryDiv>\n          )\n            : (\n            //   <EvenEntryDiv>\n                <Description {...data} />\n            //   </EvenEntryDiv>\n            )\n        )\n        : (\n        //   <TopEntryDiv>\n            <Description {...data} />\n        //   </TopEntryDiv>\n        )}\n    </>\n  )\n}\n\nexport default Entry\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport Entry from './Entry'\nimport {\n  StyledTable,\n  RankTd,\n  NameTd,\n  TimeTd,\n  StyledTableBody,\n  StyledTableHead,\n  Paragraph,\n} from '../styles'\nimport { GET_RANKINGS } from '../../graphql'\nimport { boardLimit } from '../'\n\nconst Leaderboard = ({ level, boldEntry }) => {\n  const { data, error: queryError, loading: queryLoading } = useQuery(GET_RANKINGS, {\n    variables: {\n      game: \"proset\",\n      level: parseInt(level),\n      limit: boardLimit,\n    },\n    partialRefetch: true,\n    onError: error => { return },\n    onCompleted: data => { return },\n  })\n  return (\n    <>\n      <StyledTable>\n        <StyledTableHead>\n          <tr>\n            <RankTd>Rank</RankTd>\n            <NameTd>Initials</NameTd>\n            <TimeTd>Time</TimeTd>\n          </tr>\n        </StyledTableHead>\n        <StyledTableBody>\n        {queryLoading || queryError || (\n          data.usersBy1.map(entry => (\n            entry ? (\n              <Entry\n                key={entry.id}\n                index={data.usersBy1.indexOf(entry)}\n                boldEntry={boldEntry}\n                {...entry}\n              />\n            ) : ''\n          )))}\n        </StyledTableBody>\n      </StyledTable>\n      {queryLoading && <Paragraph>Fetching data...</Paragraph>}\n      {queryError && <Paragraph>Failed to fetch data, try refreshing the page.</Paragraph>}\n    </>\n  )\n}\n\nexport default Leaderboard","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport {\n  // LeaderboardDiv,\n  BackgroundDiv, CenterDiv, LevelDiv,\n  Paragraph, Title, LeaderboardDiv, LeaderboardHeader,\n  // LeaderboardHeader,\n} from './styles'\nimport Level from './components/Level'\nimport Leaderboard from './components/Leaderboard'\n\nexport const boardLimit = 25\n\nexport const LevelPage = () => {\n  const { level } = useParams()\n  useEffect(() => {\n    document.title = `ProSet - ${level}`\n  }, [])\n  const [entry, setEntry] = useState({})\n  // let won = false\n  // if (win && !won) {\n  //   won = true\n  //   prompt(\"Initials?\")\n  // }\n  return (\n    <CenterDiv>\n      <BackgroundDiv>\n          <Title>Projective Set</Title>\n          <Paragraph>\n            <a href=\"https://en.wikipedia.org/wiki/Projective_Set_(game)\">ProSet</a> is a logic game based on the older game <a href=\"https://en.wikipedia.org/wiki/Set_(game)\">Set</a>.\n            The goal is to go through the entire deck of cards by identifying \"sets\" in the current hand.\n            Cards form a set when the aggregate number of dots of each color is an even number. Every card is unique: every possible\n            card within the appropriate number of dots is in the deck exactly once (except for the trivial blank card).\n            When you submit a valid set, those cards will disappear and you'll be dealt new cards to fill their spots. You win when you deplete the whole deck.\n          </Paragraph>\n          <LevelDiv>\n            <Level level={level} setEntry={setEntry} />\n            <LeaderboardDiv>\n              <LeaderboardHeader>Leaderboard (top 25)</LeaderboardHeader>\n              <Leaderboard level={level} boldEntry={entry} />\n            </LeaderboardDiv>\n          </LevelDiv>\n      </BackgroundDiv>\n    </CenterDiv>\n    // <BackgroundDiv>\n    //   <LeaderboardDiv>\n    //     <LeaderboardHeader>Leaderboard</LeaderboardHeader>\n    //     <Scores/>\n    //   </LeaderboardDiv>\n    // </BackgroundDiv>\n  )\n}\n","import React from 'react'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { Switch, Route, BrowserRouter as Router, Redirect } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport theme from './theme'\nimport client from './client'\nimport { LevelPage } from './containers/LevelPage'\n\nconst App = () => (\n  <Router basename=\"/proset\" >\n    <ThemeProvider theme={theme}>\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <Switch>\n            <Route\n              exact path={`/:level(4|5|6|7|8|9)`}\n              component={LevelPage}\n            />\n            <Redirect to='/4' />\n          </Switch>\n        </div>\n      </ApolloProvider>\n    </ThemeProvider>\n  </Router>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}